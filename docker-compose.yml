version: '2'

services:
#  nginx:
#    container_name: nginx
#    image: nginx:1.15.2
#    restart: always
#    ports:
#     - '80:80'
#    volumes:
     # - '.:/var/www/html'
#      - './docker/nginx/default.conf:/etc/nginx/conf.d/default.conf'
#      - '/tmp/${APP_NAME}/nginx:/var/log/nginx'
#      - "/var/log/apache2:/var/log/apache2"
#    env_file:
#      - '.env'
#    networks:
#      - app-network
#    depends_on:
#      - 'php7.2-fpm-oci8'


  php7.2-fpm-oci8:
    container_name: php7.2-fpm-oci8
    restart: always
    build:
      context: ./
      dockerfile: './docker/php-fpm/build/Dockerfile'
      args: 
      - INSTALL_COMPOSER=${PHP_FPM_INSTALL_COMPOSER}
      - INSTALL_NODE=${PHP_INSTALL_NODE}
      - INSTALL_XDEBUG=${PHP_INSTALL_XDEBUG}
    ports:
      - '8080:8080'
    volumes:
#      - './app/:/var/www/html'
      - './docker/xdebug/php-dev.ini:/usr/local/etc/php/conf.d/php-dev.ini'
      - '/tmp/${APP_NAME}/php-fpm:/var/log/xdebug'
    environment:
      - XDEBUG_CONFIG="remote_host=${HOST_IP}"
      - PHP_IDE_CONFIG="serverName=${HOST_SERVER_NAME}"
    env_file:
      - '.env'
    networks:
      - app-network
#    depends_on:
# #    - 'mysql'

#  postgresql:
#    container_name: postgresql
#    restart: always
#    build:
#      context: .
#      dockerfile: ./docker/postgres/build/Dockerfile
#    environment:
#      - POSTGRES_DB=${DB_NAME}
#      - POSTGRES_USER=${DB_USER}
#      - POSTGRES_PASSWORD=${DB_PASSWORD}
#    volumes:
     # - "./docker/postgres/init/:/docker-entrypoint-initdb.d/"
#      - "pgdata:/var/lib/postgresql/data/"
#    env_file:
#      - '.env'
#    networks:
#      - app-network
  #MySQL Service
#  mysql:
#    image: mysql:8.0
#    command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci','--default-authentication-plugin=mysql_native_password']
#    container_name: mysql
#    restart: always
#    tty: true
#    ports:
#      - "3306:3306"
#    environment:
#      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASS}
#    volumes:
#      - "mysqldata:/var/lib/mysql"
#      - "./docker/mysql/init:/docker-entrypoint-initdb.d"
#    env_file:
#      - '.env'
#    networks:
#      - app-network

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.0.1.0/28
#Volumes
volumes:
  mysqldata:
  pgdata:
